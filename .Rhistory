if (company_country(ticker) %in% names(Countries)){
if (company_country(ticker) == "BENIN") {
adn<- ".bj"
} else if (company_country(ticker) == "BURKINA FASO") {
adn<- ".bf"
} else if (company_country(ticker) == "IVORY COAST") {
adn<- ".ci"
} else if (company_country(ticker) == "MALI") {
adn<- ".ml"
} else if (company_country(ticker) == "NIGER") {
adn<- ".ne"
} else if (company_country(ticker) == "SENEGAL") {
adn<- ".sn"
} else if (company_country(ticker) == "TOGO") {
adn<- ".tg"
}
url <-paste0("https://www.sikafinance.com/marches/cotation_", ticker, adn)
# print(url)
} else {
print(paste0("Be sure that", ticker, "belong's to BRVM stock market"))
}
} else {
print(paste0("Be sure that", ticker, "belong's to BRVM stock market"))
}
##Create empty dataframe
ticker_info<-as.data.frame(matrix(NA, ncol = 2, nrow = 0))
tryCatch({
val<- read_html(url) %>% html_elements('table') %>% html_table()
# for (i in 2:4){
#   # val<- (read_html(url) %>% html_elements('table') %>% html_table())[[i]]
#
#
#   ticker_info<-rbind(ticker_info, val[[i]])
# }
ticker_info <- rbind(val[[2]], val[[3]], val[[3]])
# colnames(ticker_info) <- NULL
colnames(ticker_info) <- c("Informations", "Values")
return(ticker_info)
},
error = function(e) {
print("Make sure you have an active internet connection")
},
warning = function(w) {
print("Make sure you have an active internet connection")
})
}
BRVM_company_info("BoaM")
BRVM_company_info("BoaMo")
print(paste0("Be sure that", ticker, "belong's to BRVM stock market"))
#'
#' @return A tibble
#' @export
#'
#' @importFrom rvest html_elements read_html
#'
#' @examples \dontrun{
#' BRVM_company_info("BOAS")
#' BRVM_company_info("BoaM")}
#'
BRVM_company_info<- function(ticker){
ticker<-toupper(ticker)
all_tickers <- c( "ABJC", "BICC", "BNBC", "BOAB", "BOABF", "BOAC",
"BOAM", "BOAN", "BOAS", "CABC", "CBIBF", "CFAC",
"CIEC", "ECOC", "ETIT", "FTSC", "NEIC", "NSBC",
"NTLC", "ONTBF", "ORGT", "ORAC", "PALC", "PRSC", "SAFC",
"SCRC", "SDCC", "SDSC", "SEMC", "SGBC", "SHEC",
"SIBC", "SICC", "SIVC", "SLBC", "SMBC", "SNTS",
"SOGC", "SPHC", "STAC", "STBC", "TTLC",
"TTLS", "UNLC", "UNXC"
#, "TTRC", "SVOC"
)
Countries<-list(BENIN =c("BOAB"), "BURKINA FASO" = c("BOABF", "CBIBF", "ONTBF"),
"IVORY COAST" = c("ABJC", "BICC", "BNBC","BOAC", "CABC", "CFAC", "CIEC", "ECOC", "FTSC", "NEIC",
"NSBC","NTLC", "ORAC", "PALC", "PRSC", "SAFC", "SCRC", "SDCC", "SDSC", "SEMC","SGBC",
"SHEC", "SIBC", "SICC", "SIVC", "SLBC", "SMBC", "SOGC","SPHC", "STAC", "STBC",
"SVOC", "TTLC", "TTRC", "UNLC","UNXC"),
MALI = c("BOAM"), NIGER = c("BOAN"),
SENEGAL = c("BOAS", "SNTS", "TTLS"),
TOGO = c("ETIT", "ORGT"))
if (ticker %in% all_tickers){
# url<-paste0("https://www.sikafinance.com/marches/cotation_", ticker)
if (company_country(ticker) %in% names(Countries)){
if (company_country(ticker) == "BENIN") {
adn<- ".bj"
} else if (company_country(ticker) == "BURKINA FASO") {
adn<- ".bf"
} else if (company_country(ticker) == "IVORY COAST") {
adn<- ".ci"
} else if (company_country(ticker) == "MALI") {
adn<- ".ml"
} else if (company_country(ticker) == "NIGER") {
adn<- ".ne"
} else if (company_country(ticker) == "SENEGAL") {
adn<- ".sn"
} else if (company_country(ticker) == "TOGO") {
adn<- ".tg"
}
url <-paste0("https://www.sikafinance.com/marches/cotation_", ticker, adn)
# print(url)
} else {
print(paste0("Be sure that ", ticker, " belong's to BRVM stock market"))
}
} else {
print(paste0("Be sure that ", ticker, " belong's to BRVM stock market"))
}
##Create empty dataframe
ticker_info<-as.data.frame(matrix(NA, ncol = 2, nrow = 0))
tryCatch({
val<- read_html(url) %>% html_elements('table') %>% html_table()
# for (i in 2:4){
#   # val<- (read_html(url) %>% html_elements('table') %>% html_table())[[i]]
#
#
#   ticker_info<-rbind(ticker_info, val[[i]])
# }
ticker_info <- rbind(val[[2]], val[[3]], val[[3]])
# colnames(ticker_info) <- NULL
colnames(ticker_info) <- c("Informations", "Values")
return(ticker_info)
},
error = function(e) {
print("Make sure you have an active internet connection")
},
warning = function(w) {
print("Make sure you have an active internet connection")
})
}
BRVM_company_info("BoaMo")
rm(ticker_info)
rm(ticker)
BRVM_company_info("BoaMo")
rm(adn, all_tickers, url)
rm(BRVM_company_info)
BRVM_company_info("BOAS")
library(BRVM)
BRVM_company_info("BOAS")
BRVM.index()
BRVM_bySector(.sectors = c("Other", "Agriculture"))
detach("package:xml2", unload = TRUE)
BRVM_bySector(.sectors = c("Other", "Agriculture"))
library(xml2)
BRVM_cap()
BRVM_cap()
BRVM_company_cap()
BRVM_company_info("BoaMu")
BRVM_company_info("BoaM")
BRVM_company_rank()
BRVM_direction("Up")
BRVM_direction("Down")
BRVM_get(.symbol = 'Bicc')
BRVM_get1("BrvmAS", Period = 1 )
BRVM_get1("ORAC", Period = 1 )
BRVM_get1(c("ORAC","etit"), Period = 1 )
BRVM_get1(c("BRVMPR", "BRVMAG"), Period = 5)
BRVM_index()
BRVM_index_stock("brvmtr", Period = 365 )
BRVM_tickers()
dput(BRVM_tickers()$Ticker)
BRVM_ticker_desc()
BRVM_ticker_desc<- function(){
Countries<-list(BENIN =c("BOAB"), "BURKINA FASO" = c("BOABF", "CBIBF", "ONTBF"),
"IVORY COAST" = c("ABJC", "BICC", "BNBC","BOAC", "CABC", "CFAC", "CIEC", "ECOC", "FTSC", "NEIC",
"NSBC","NTLC", "ORAC", "PALC", "PRSC", "SAFC", "SCRC", "SDCC", "SDSC", "SEMC","SGBC",
"SHEC", "SIBC", "SICC", "SIVC", "SLBC", "SMBC", "SOGC","SPHC", "STAC", "STBC",
"SVOC", "TTLC", "TTRC", "UNLC","UNXC"),
MALI = c("BOAM"), NIGER = c("BOAN"),
SENEGAL = c("BOAS", "SNTS", "TTLS"),
TOGO = c("ETIT", "ORGT"))
.sectors =list(Agriculture = c("PALC","SCRC","SICC","SOGC","SPHC"),
Distribution = c("ABJC","BNBC","CFAC","PRSC","SHEC","TTLC","TTLS"),
Industry = c("CABC","FTSC","NEIC","NTLC","SEMC","SIVC","SLBC","SMBC","STBC","TTRC","UNLC","UNXC"),
Finance = c("BOAB","BOABF","BOAC","BOAM","BOAN","BOAS","BICC","CBIBF","ECOC","ETIT","NSBC","ORGT","SAFC","SGBC","SIBC"),
Transport = c("SDSC","SVOC"),
"Public service" = c("CIEC","ONTBF","SDCC","SNTS", "ORAC"),
Other = c("STAC"))
tryCatch(
{
Desc.BRVM.all <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_elements('table') %>%
rvest::html_table()
Desc.BRVM.all <- Desc.BRVM.all[[4]]
Desc.BRVM.all <- Desc.BRVM.all[1:2]
colnames(Desc.BRVM.all)<-c(
"Ticker",
"Company name")
#Create sector column
Desc.BRVM.all$Sector<-NA
for (elm in 1:length(Desc.BRVM.all$Ticker)){
for (elm1 in 1 : length(.sectors)) {
if (Desc.BRVM.all$Ticker[elm] %in% .sectors[[elm1]]) {
Desc.BRVM.all$Sector[elm]<- toupper(names(.sectors)[[elm1]])
}
}
}
#Create country column
Desc.BRVM.all$Country<-NA
for (elem in 1:length(Desc.BRVM.all$Ticker)){
for (elem1 in 1 : length(Countries)) {
if (Desc.BRVM.all$Ticker[elem] %in% Countries[[elem1]]) {
Desc.BRVM.all$Country[elem]<- names(Countries)[[elem1]]
}
}
}
Desc.BRVM.all$Country <- as.factor(Desc.BRVM.all$Country)
Desc.BRVM.all$Sector <- as.factor(Desc.BRVM.all$Sector)
return(Desc.BRVM.all)
},
error = function(e) {
print("Make sure you have an active internet connection")
},
warning = function(w) {
print("Make sure you have an active internet connection")
}
)
}
BRVM_ticker_desc()
rm(BRVM_ticker_desc)
BRVM_traded_val()
company_cap("BICC")
company_cap("ORAC")
BRVM_plot("BICC", up.col = "blue", down.col = "pink")
BRVM_stock_market("2022-04-25")
library(shiny)
library(waiter)
library(ftExtra)
library(moments)
library(GGally)
library(echarts4r)
library(prophet)
library(fBasics)
library(nortest)
library(urca)
library(shinydashboard)
library(plotly)
library(ggplot2)
library(shinyWidgets)
library(shinythemes)
library(datasets)
library(xts)
library(fontawesome)
library(quantmod)
library(gsheet)
library(httr)
library(stringr)
library(dplyr)
library(stringi)
library(V8)
library(tidyr)
library(rvest)
library(formattable)
library(data.table)
library(kableExtra)
library(rlang)
library(lubridate)
library(purrr)
library(DT)
library(highcharter)
library(tidyverse)
library(tseries)
library(timeSeries)
library(forecast)
library(highr)
library(httr2)
library(bslib)
library(thematic)
library(magrittr)
library(colourpicker)
library(psych)
library(vtable)
library(RCurl)
library(XML)
library(shinydashboardPlus)
library(xml2)
library(viridis)
library(treemap)
library(rugarch)
library(rmgarch)
library(shinycssloaders)
library(ichimoku)
library(PerformanceAnalytics)
library(shinycustomloader)
library(shinyjs)
library(usethis)
library(rhub)
usethis::use_cran_comments()
devtools::build_readme()
devtools::build_readme()
usethis::use_cran_comments()
devtools::build_readme()
urlchecker::url_check()
library(devtools)
urlchecker::url_check()
urlchecker::url_check()
git pull
devtools::build_readme()
getwd()
BRVM_rank("Top", 10)
library(BRVM)
BRVM_rank("Top", 10)
BRVM_rank("Top", 10)
devtools::build_readme()
devtools::build_readme()
BRVM_rank("Top", 10)
BRVM_rank("Top", 10)
library(highcharter)
library(lubridate)
library(rlang)
library(httr2)
library(dplyr)
library(stringr)
library(xts)
BRVM_plot("BICC")
BRVM_rank("Top", 10)
devtools::build_readme()
install.packages("webshot")
webshot::install_phantomjs()
install.packages("webshot")
devtools::build_readme()
devtools::build_readme()
BRVM_ticker_desc()
BRVM_ticker_desc()
BRVM_ticker_desc()
BRVM_ticker_desc()
BRVM_ticker_desc<- function(){
Countries<-list(BENIN =c("BOAB"), "BURKINA FASO" = c("BOABF", "CBIBF", "ONTBF"),
"IVORY COAST" = c("ABJC", "BICC", "BNBC","BOAC", "CABC", "CFAC", "CIEC", "ECOC", "FTSC", "NEIC",
"NSBC","NTLC", "ORAC", "PALC", "PRSC", "SAFC", "SCRC", "SDCC", "SDSC", "SEMC","SGBC",
"SHEC", "SIBC", "SICC", "SIVC", "SLBC", "SMBC", "SOGC","SPHC", "STAC", "STBC",
"SVOC", "TTLC", "TTRC", "UNLC","UNXC"),
MALI = c("BOAM"), NIGER = c("BOAN"),
SENEGAL = c("BOAS", "SNTS", "TTLS"),
TOGO = c("ETIT", "ORGT"))
.sectors =list(Agriculture = c("PALC","SCRC","SICC","SOGC","SPHC"),
Distribution = c("ABJC","BNBC","CFAC","PRSC","SHEC","TTLC","TTLS"),
Industry = c("CABC","FTSC","NEIC","NTLC","SEMC","SIVC","SLBC","SMBC","STBC","TTRC","UNLC","UNXC"),
Finance = c("BOAB","BOABF","BOAC","BOAM","BOAN","BOAS","BICC","CBIBF","ECOC","ETIT","NSBC","ORGT","SAFC","SGBC","SIBC"),
Transport = c("SDSC","SVOC"),
"Public service" = c("CIEC","ONTBF","SDCC","SNTS", "ORAC"),
Other = c("STAC"))
tryCatch(
{
Desc.BRVM.all <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_elements('table') %>%
rvest::html_table()
Desc.BRVM.all <- Desc.BRVM.all[[4]]
Desc.BRVM.all <- Desc.BRVM.all[1:2]
colnames(Desc.BRVM.all)<-c(
"Ticker",
"Company name")
#Create sector column
Desc.BRVM.all$Sector<-NA
for (elm in 1:length(Desc.BRVM.all$Ticker)){
for (elm1 in 1 : length(.sectors)) {
if (Desc.BRVM.all$Ticker[elm] %in% .sectors[[elm1]]) {
Desc.BRVM.all$Sector[elm]<- toupper(names(.sectors)[[elm1]])
}
}
}
#Create country column
Desc.BRVM.all$Country<-NA
for (elem in 1:length(Desc.BRVM.all$Ticker)){
for (elem1 in 1 : length(Countries)) {
if (Desc.BRVM.all$Ticker[elem] %in% Countries[[elem1]]) {
Desc.BRVM.all$Country[elem]<- names(Countries)[[elem1]]
}
}
}
Desc.BRVM.all$Country <- as.factor(Desc.BRVM.all$Country)
Desc.BRVM.all$Sector <- as.factor(Desc.BRVM.all$Sector)
return(Desc.BRVM.all)
},
error = function(e) {
print("Make sure you have an active internet connection")
},
warning = function(w) {
print("Make sure you have an active internet connection")
}
)
}
BRVM_ticker_desc()
devtools::build_readme()
View(BRVM_ticker_desc)
rm(BRVM_ticker_desc)
getwd()
usethis::use_release_issue()
usethis::use_cran_comments()
devtools::build_readme()
urlchecker::url_check()
urlchecker::url_check()
devtools::build_readme()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
usethis::use_version('major')
devtools::submit_cran()
library(readxl)
mrf <- read_excel("~/DOSSIER MFR BRVM/Marché actions_Carnet_ordres_2011_fev2020 (1).xlsx")
mrf <- read_excel("~/DOSSIER MFR BRVM/Marché actions_Carnet_ordres_2011_fev2020 (1).xlsx")
mrf <- read_excel("~/DOSSIER MFR BRVM/Marché actions_Carnet_ordres_2011_fev2020 (1).xlsx")
ask_dt <- subset(mrf, mrf$`Sens de la transaction`=='Ask')
bid_dt <- subset(mrf, mrf$`Sens de la transaction`=='Bid')
View(ask_dt)
dput(names(ask_dt))
library(highfrequency)
tqData <- matchTradesQuotes(sampleTData[as.Date(DT) == "2018-01-02"],
sampleQData[as.Date(DT) == "2018-01-02"])
View(tqData)
ask_dt = ask_dt[, -4]
View(bid_dt)
bid_dt = bid_dt[, -4]
dput(names(ask_dt))
names(ask_dt)= c("Code symbole", "Libellé des titres",
"Heure d'exécution", "Ask",
"Volume ask", "Numéro d'ordre")
View(tqData)
names(ask_dt)= c("Code symbole", "Libellé des titres",
"Heure d'exécution", "Ask",
"Volume ask", "Numéro d'ordre ask")
names(bid_dt)= c("Code symbole", "Libellé des titres",
"Heure d'exécution", "Bid",
"Volume bid", "Numéro d'ordre bid")
mfr_new = merge(ask_dt, bid_dt, by = c("Heure d'exécution", "Code symbole"))
nrow(ask_dt)
nrow(ask_dt) + nrow(bid_dt)
nrow(mfr_new)
View(mfr_new)
names(ask_dt)
mfr_new = merge(ask_dt, bid_dt, by = c("Heure d'exécution", "Code symbole", "Libellé des titres"))
nrow(mfr_new)
View(tqData)
names(tqData)
dput(names(tqData))
library(openssl)
library(xlsx)
write_xlsx(tqData, "Exemple de la base de données.xlsx")
library(writexl)
write_xlsx(tqData, "Exemple de la base de données.xlsx")
getwd()
save.image()
load("~/GitHub/BRVM/.RData")
library(shiny)
library(waiter)
library(ftExtra)
library(moments)
library(GGally)
library(echarts4r)
library(prophet)
library(fBasics)
library(nortest)
library(urca)
library(shinydashboard)
library(plotly)
library(ggplot2)
library(shinyWidgets)
library(shinythemes)
library(datasets)
library(xts)
library(fontawesome)
library(quantmod)
library(gsheet)
library(httr)
library(stringr)
library(dplyr)
library(stringi)
library(V8)
library(tidyr)
library(rvest)
library(formattable)
library(data.table)
library(kableExtra)
library(rlang)
library(lubridate)
library(purrr)
library(DT)
library(highcharter)
library(tidyverse)
library(tseries)
library(timeSeries)
library(forecast)
library(highr)
library(httr2)
library(bslib)
library(thematic)
library(magrittr)
library(colourpicker)
library(psych)
library(vtable)
library(RCurl)
library(XML)
library(shinydashboardPlus)
library(xml2)
library(viridis)
library(treemap)
library(rugarch)
library(rmgarch)
library(shinycssloaders)
library(ichimoku)
library(PerformanceAnalytics)
library(shinycustomloader)
library(shinyjs)
library(usethis)
library(rhub)
library(devtools)
devtools::install_github("Koffi-Fredysessie/BRVM")
devtools::install_github("Koffi-Fredysessie/BRVM")
remotes::install_github("Koffi-Fredysessie/BRVM")
library(remotes)
remotes::install_github("Koffi-Fredysessie/BRVM")
remove.packages("BRVM")
remotes::install_github("Koffi-Fredysessie/BRVM")
remotes::install_github("Koffi-Fredysessie/BRVM")
